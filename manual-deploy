#!/bin/bash
set -eux
: ${SCRIPTS:=$(readlink -f $(dirname $0))}
: ${JUJU_HOME:=$SCRIPTS/manual-provider-home}
CHARM_PREFIX=${CHARM_PREFIX:-}
export ENV=manual
: ${JOB_NAME:="testy"}
export JUJU_HOME JOB_NAME
$SCRIPTS/ec2-terminate-job-instances
export INSTANCE_TYPE=m1.large
export AMI_IMAGE=ami-bd6d40d4
machine_0_id=$($SCRIPTS/ec2-run-instance-get-id -g manual-juju-test)
machine_1_id=$($SCRIPTS/ec2-run-instance-get-id -g manual-juju-test)
machine_2_id=$($SCRIPTS/ec2-run-instance-get-id -g manual-juju-test)
$SCRIPTS/ec2-tag-job-instances $machine_0_id $machine_1_id $machine_2_id
machine_0_name=$($SCRIPTS/ec2-get-name $machine_0_id)
machine_1_name=$($SCRIPTS/ec2-get-name $machine_1_id)
machine_2_name=$($SCRIPTS/ec2-get-name $machine_2_id)

$SCRIPTS/wait-for-port $machine_0_name 22
rm -f $JUJU_HOME/environments/manual.jenv

# Write new environments.yaml
cat  > $JUJU_HOME/environments.yaml <<EOT
environments:
  manual:
    type: manual
    bootstrap-host: $machine_0_name
    bootstrap-user: ubuntu
    tools-metadata-url: http://juju-dist.s3.amazonaws.com/testing/tools
EOT
juju bootstrap --show-log -e manual

for machine in $machine_1_name $machine_2_name; do
  $SCRIPTS/wait-for-port $machine 22
  juju add-machine ssh:$machine
done

if $SCRIPTS/deploy_stack.py --charm-prefix "$CHARM_PREFIX" --already-bootstrapped manual "$@"; then
  exit_code=0
else
  exit_code=1
fi
rm $JUJU_HOME/environments/manual.jenv
$SCRIPTS/ec2-terminate-job-instances
exit $exit_code
