#!/bin/bash
set -eu
SCRIPTS=$(readlink -f $(dirname $0))
: ${JOB_NAME="testy"}
export JOB_NAME
export PATH="$SCRIPTS:$PATH"
source $JUJU_HOME/ec2rc
ec2-terminate-job-instances
set -x
export INSTANCE_TYPE=m1.large
export AMI_IMAGE=ami-36aa4d5e
instance_id=$(ec2-run-instance-get-id)
ec2-tag-job-instances $instance_id
instance_name=$(ec2-get-name $instance_id)
wait-for-port $instance_name 22
set +e
ssh -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" \
    ubuntu@$instance_name  "JENKINS_URL=$JENKINS_URL bash"<<"EOT"
set -eux
for attempt in $(seq 10); do
  if grep ec2.archive.ubuntu.com /etc/apt/sources.list > /dev/null; then
    break
  elif [ "$attempt" == "10" ]; then
    exit 1
  fi
  sleep 10
done
sudo add-apt-repository cloud-archive:tools
sudo apt-get update
sudo DEBIAN_FRONTEND=noninteractive apt-get upgrade -y
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y bzr

# prevent spurious failure on success
rm .bash_logout
$SCRIPTS/jujuci.py get build-revision buildvars.bash ./
source buildvars.bash
RELEASE=$(lsb_release -sr)
ARCH=$(dpkg --print-architecture)
juju_local_deb="juju-local_$VERSION-0ubuntu1~$RELEASE.1~juju1_all.deb"
juju_core_deb="juju-core_$VERSION-0ubuntu1~$RELEASE.1~juju1_$ARCH.deb"
juju-ci-tools/jujuci.py get publish-revision $JUJU_LOCAL_DEB
juju-ci-tools/jujuci.py get publish-revision $JUJU_CORE_DEB

set +e
sudo dpkg -i $juju_core_deb $juju_local_deb
set -e
sudo apt-get install -y -f
export JUJU_REPOSITORY="$HOME/repo"
mkdir -p $JUJU_REPOSITORY/precise
bzr branch lp:charms/ubuntu $JUJU_REPOSITORY/precise/ubuntu
mkdir ~/.juju
cat > ~/.juju/environments.yaml <<EOT2
default: local
environments:
  local:
    type: local
    tools-metadata-url: http://juju-dist.s3.amazonaws.com/testing/tools
EOT2
ssh-keygen -t rsa -b 2048 -N "" -f ~/.ssh/id_rsa
#juju sync-tools --show-log
login_ip=$(sudo cat /proc/net/ip_conntrack|\
  sed -nr 's/.*src=([^ ]*) .*dport=22 .*/\1/p')
gateway=$(route -n | sed -rn 's/^0.0.0.0 *([0-7.]*) .*/\1/p')
nameservers="$(sed /etc/resolv.conf -nr -e 's/nameserver (.*)/\1/p')"
for ns in $nameservers; do
  sudo route add $ns gw $gateway
done
sudo route add $login_ip gw $gateway
for ip in $(dig archive.ubuntu.com ubuntu-cloud.archive.canonical.com\
    security.ubuntu.com cloud-images.ubuntu.com +short |sort|uniq); do
  sudo route add $ip gw $gateway
done
sudo route add -net 172.16.0.0 netmask 255.240.0.0 gw $gateway
sudo route del default gw $gateway
juju bootstrap --show-log
for x in $(seq 6); do
  if juju deploy --show-log local:precise/ubuntu; then
    break
  elif [ "$x" == "6" ]; then
    exit 0;
  fi
done
for x in $(seq 30); do
  # relying on the indentation of ubuntu/0's agent-state here...
  if juju status | grep -E ' {8}agent-state: started'; then
    exit 0;
  fi
  sleep 10
done
juju status
exit 1
EOT
result=$?
set -e
ec2-terminate-job-instances
exit $result
