#!/bin/bash
set -eux
: ${LOCAL_JENKINS_URL=$JENKINS_URL}

export INSTANCE_TYPE=$1
export AMI_IMAGE=$2
tarfile=$($SCRIPTS/get-tarfile-name $revision_build)
juju_version=$(basename $tarfile .tar.gz)
instance_id=$($SCRIPTS/ec2-run-instance-get-id)
$SCRIPTS/ec2-tag-job-instances $instance_id

set +x
echo Starting instance $instance_id
instance_name=$($SCRIPTS/ec2-get-name $instance_id)
echo Instance has ip $instance_name
sleep 30
$SCRIPTS/wait-for-port $instance_name 22

# Define the common vars before the embedded scripts; do not make them evalaute
# what is already know in the outer script.
set -x
set +e
scp -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" \
    $HOME/jobs/build-revision/builds/$revision_build/archive/$tarfile \
    ubuntu@$instance_name:~/

ssh -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" \
    ubuntu@$instance_name  <<EOT
set -eux
ssh-keygen -t rsa -b 2048 -N "" -f ~/.ssh/id_rsa
tar -xzvf $tarfile
export GOPATH=\$HOME/$juju_version
cd \$GOPATH/src/launchpad.net/juju-core
sudo apt-get update
sudo apt-get install -y build-essential
make install-dependencies
bzr whoami 'J. Random Hacker <jrandom@example.org>'
# Force mongodb-server to be present because the makefile doesn't know that
# juju-mongodb was temporarilly removed
sudo apt-get install -y mongodb-server
sudo apt-get remove -y juju-mongodb
if [[ \$(lsb_release -sc) == "trusty" ]]; then
    sudo apt-get upgrade -y
fi
make build
make check
EOT
EXIT_STATUS=$?

set -e
$SCRIPTS/ec2-terminate-job-instances
exit $EXIT_STATUS
